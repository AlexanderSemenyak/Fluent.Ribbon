<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:converters="clr-namespace:Fluent.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <Style x:Key="RibbonDropDownButtonStyle"
           TargetType="{x:Type Fluent:DropDownButton}">
        <Setter Property="Template"
                Value="{DynamicResource RibbonDropDownButtonControlTemplate}" />
        <Setter Property="Height"
                Value="68" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size"
                     Value="Large">
                <Setter Property="Fluent:RibbonProperties.IconSize"
                        Value="Large" />
                <Setter Property="Height"
                        Value="68" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Middle">
                <Setter Property="Fluent:RibbonProperties.IconSize"
                        Value="Small" />
                <Setter Property="Height"
                        Value="22" />
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Small">
                <Setter Property="Fluent:RibbonProperties.IconSize"
                        Value="Small" />
                <Setter Property="Height"
                        Value="22" />
                <Setter Property="Width"
                        Value="32" />
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
            <Trigger Property="IsSimplified"
                     Value="True">
                <Setter Property="Template"
                        Value="{DynamicResource Fluent.Ribbon.Templates.DropDownButton.Simplified}"/>
                <Setter Property="Width"
                        Value="Auto"/>
                <Setter Property="Height"
                        Value="Auto"/>
                <Setter Property="MinHeight"
                        Value="30"/>
                <Setter Property="HorizontalAlignment"
                        Value="Stretch"/>
                <Setter Property="VerticalAlignment"
                        Value="Stretch"/>
                <Setter Property="Padding"
                        Value="6,2,2,2"/>
                <Setter Property="Fluent:RibbonProperties.IconSize"
                        Value="Medium" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified"
                               Value="True"/>
                    <Condition Property="Size"
                               Value="Small"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fluent:RibbonProperties.IconSize"
                        Value="Small" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="RibbonDropDownButtonControlTemplate"
                     TargetType="{x:Type Fluent:DropDownButton}">
        <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource MenuSeparatorStyle}"
                   TargetType="{x:Type Separator}" />
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="PART_ButtonBorder"
                    Height="Auto"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <StackPanel x:Name="stackPanel"
                            Width="Auto"
                            Margin="{TemplateBinding Padding}"
                            Orientation="Vertical">
                    <Fluent:IconPresenter x:Name="iconImage"
                                          Margin="0,2,0,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IconSize="{Binding (Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Fluent:TwoLineLabel x:Name="controlLabel"
                                         Margin="2,0,2,2"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                         HasGlyph="{TemplateBinding HasTriangle}" />
                </StackPanel>
            </Border>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="0,0,-4,0"
                   VerticalAlignment="Top"
                   Placement="Bottom"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Name="DropDown"
                      Margin="0"
                      VerticalAlignment="Top"
                      SnapsToDevicePixels="True">
                    <Border x:Name="PART_DropDownBorder"
                            MinWidth="{TemplateBinding ActualWidth}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <Grid Width="Auto"
                              Height="Auto"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Top">
                            <Border Width="Auto"
                                    Height="Auto"
                                    VerticalAlignment="Top"
                                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                                    BorderThickness="1" />
                            <Grid Margin="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer x:Name="PART_ScrollViewer"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              Margin="1"
                                              VerticalScrollBarVisibility="Auto"
                                              HorizontalScrollBarVisibility="Hidden"
                                              Style="{DynamicResource MenuScrollViewer}"
                                              IsTabStop="False"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Local" />
                                </ScrollViewer>
                                <Border x:Name="resizeBorder"
                                        Grid.Row="1"
                                        Height="11"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgroundBrush}"
                                        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                                        BorderThickness="0,1,0,0">
                                    <Grid>
                                        <Thumb x:Name="PART_ResizeVerticalThumb"
                                               Width="Auto"
                                               Height="10"
                                               Margin="0,0,0,-90"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Top"
                                               Cursor="SizeNS"
                                               Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                        <Thumb x:Name="PART_ResizeBothThumb"
                                               Width="10"
                                               Height="10"
                                               Margin="0,0,0,-90"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Cursor="SizeNWSE"
                                               Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode"
                     Value="None">
                <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Collapsed" />
                <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="Vertical">
                <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Collapsed" />
                <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Small">
                <Setter Property="Orientation"
                        TargetName="stackPanel"
                        Value="Horizontal" />
                <Setter Property="Margin"
                        TargetName="iconImage"
                        Value="2,0,0,0" />
                <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="-2,0,2,1" />
                <Setter Property="Text"
                        TargetName="controlLabel"
                        Value="" />
                <Setter Property="Width"
                        TargetName="controlLabel"
                        Value="10" />
                <Setter Property="VerticalAlignment"
                        TargetName="controlLabel"
                        Value="Center" />
                <Setter Property="HasTwoLines"
                        TargetName="controlLabel"
                        Value="False" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Middle">
                <Setter Property="Orientation"
                        TargetName="stackPanel"
                        Value="Horizontal" />
                <Setter Property="Width"
                        TargetName="stackPanel"
                        Value="Auto" />
                <Setter Property="VerticalAlignment"
                        TargetName="iconImage"
                        Value="Center" />
                <Setter Property="Margin"
                        TargetName="iconImage"
                        Value="2,0,2,0" />
                <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="2,0,2,1" />
                <Setter Property="VerticalAlignment"
                        TargetName="controlLabel"
                        Value="Center" />
                <Setter Property="HasTwoLines"
                        TargetName="controlLabel"
                        Value="False" />
                <Setter Property="VerticalAlignment"
                        TargetName="PART_ButtonBorder"
                        Value="Stretch" />
            </Trigger>

            <Trigger Property="IsDropDownOpen"
                     Value="True">
                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        TargetName="controlLabel"
                        Value="0.5" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsDropDownOpen"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="Fluent.Ribbon.Templates.DropDownButton.Simplified"
                     TargetType="{x:Type Fluent:DropDownButton}">
        <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource MenuSeparatorStyle}"
                   TargetType="{x:Type Separator}" />
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="PART_ButtonBorder"                    
                    Height="Auto"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="stackPanel"
                      Width="Auto"
                      Height="Auto"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="iconImageGrid"
                          Grid.Column="0"
                          Margin="0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center">
                        <Fluent:IconPresenter x:Name="iconImage"
                                              IconSize="{Binding (Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                              SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                              MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                              LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="iconImageBorder"
                                Visibility="Collapsed"
                                Width="{Binding ActualWidth,ElementName=iconImage}"
                                Height="{Binding ActualHeight,ElementName=iconImage}"
                                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                                BorderThickness="1"/>
                    </Grid>
                    <Fluent:TwoLineLabel x:Name="controlLabel"
                                         Grid.Column="1"
                                         Margin="2,0,0,0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                         HasTwoLines="False"
                                         HasGlyph="False" />
                    <Fluent:TwoLineLabel x:Name="controlLabel2"
                                         Grid.Column="2"
                                         Margin="0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Text=""
                                         HasTwoLines="False"
                                         HasGlyph="{TemplateBinding HasTriangle}" />
                </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="0,0,-4,0"
                   VerticalAlignment="Top"
                   Placement="Bottom"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Name="DropDown"
                      Margin="0"
                      VerticalAlignment="Top"
                      SnapsToDevicePixels="True">
                    <Border x:Name="PART_DropDownBorder"
                            MinWidth="{TemplateBinding ActualWidth}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <Grid Width="Auto"
                              Height="Auto"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Top">
                            <Border Width="Auto"
                                    Height="Auto"
                                    VerticalAlignment="Top"
                                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                                    BorderThickness="1" />
                            <Grid Margin="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer x:Name="PART_ScrollViewer"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              Margin="1"
                                              VerticalScrollBarVisibility="Auto"
                                              HorizontalScrollBarVisibility="Hidden"
                                              Style="{DynamicResource MenuScrollViewer}"
                                              IsTabStop="False"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Local" />
                                </ScrollViewer>
                                <Border x:Name="resizeBorder"
                                        Grid.Row="1"
                                        Height="11"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgroundBrush}"
                                        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                                        BorderThickness="0,1,0,0">
                                    <Grid>
                                        <Thumb x:Name="PART_ResizeVerticalThumb"
                                               Width="Auto"
                                               Height="10"
                                               Margin="0,0,0,-90"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Top"
                                               Cursor="SizeNS"
                                               Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                        <Thumb x:Name="PART_ResizeBothThumb"
                                               Width="10"
                                               Height="10"
                                               Margin="0,0,0,-90"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Cursor="SizeNWSE"
                                               Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode"
                     Value="None">
                <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Collapsed" />
                <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="Vertical">
                <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Collapsed" />
                <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Small"/>
                    <Condition Property="OptimalIcon"
                               SourceName="iconImage"
                               Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="iconImageBorder"
                        Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Middle"/>
                    <Condition Property="OptimalIcon"
                               SourceName="iconImage"
                               Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="iconImageBorder"
                        Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Large"/>
                    <Condition Property="OptimalIcon"
                               SourceName="iconImage"
                               Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="iconImage"
                        Value="Collapsed" />
                <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="0" />
            </MultiTrigger>

            <Trigger Property="Size"
                     Value="Small">
                <Setter Property="Margin"
                        TargetName="stackPanel"
                        Value="4,0,1,0" />
                <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="0" />
                <Setter Property="Text"
                        TargetName="controlLabel"
                        Value="" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Middle">
                <Setter Property="Margin"
                        TargetName="controlLabel"
                        Value="0" />
                <Setter Property="Text"
                        TargetName="controlLabel"
                        Value="" />
            </Trigger>
            
            <Trigger Property="IsDropDownOpen"
                     Value="True">
                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="BorderBrush"
                        TargetName="iconImageBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Control.Disabled.BorderBrush}"/>
                <Setter Property="Opacity"
                        TargetName="controlLabel"
                        Value="0.5" />
                <Setter Property="Opacity"
                        TargetName="controlLabel2"
                        Value="0.5" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsDropDownOpen"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>