<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent">

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.RibbonTabControl.MinimizeToggleButton"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                Width="22"
                Height="22"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
            <Fluent:IconPresenter x:Name="iconImage"
                                  Margin="2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                  SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Fluent.Ribbon.Styles.RibbonTabControl.MinimizeToggleButton"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="CanAddToQuickAccessToolBar" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.RibbonTabControl.MinimizeToggleButton}" />
        <Setter Property="Width" Value="22" />
    </Style>

    <Style x:Key="RibbonTabControlStyle"
           TargetType="{x:Type Fluent:RibbonTabControl}">
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Background}" />
        <Setter Property="CanMinimize" Value="{Binding CanMinimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:Ribbon}}, Mode=TwoWay}" />
        <Setter Property="CanUseSimplified" Value="{Binding CanUseSimplified, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:Ribbon}}, Mode=TwoWay}" />
        <Setter Property="ContentGapHeight" Value="{Binding ContentGapHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:Ribbon}}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Foreground}" />
        <Setter Property="IsMinimized" Value="{Binding IsMinimized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:Ribbon}}, Mode=TwoWay}" />
        <Setter Property="IsSimplified" Value="{Binding IsSimplified, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:Ribbon}}, Mode=TwoWay}" />
        <Setter Property="Template" Value="{DynamicResource RibbonTabControlControlTemplate}" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Fluent:ScreenTip x:Key="Fluent.Ribbon.Resources.RibbonTabControl.MinimizeScreenTip"
                      Title="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.MinimizeButtonScreenTipTitle, Mode=OneWay}"
                      x:Shared="False"
                      Text="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.MinimizeButtonScreenTipText, Mode=OneWay}" />

    <Fluent:ScreenTip x:Key="Fluent.Ribbon.Resources.RibbonTabControl.ExpandScreenTip"
                      Title="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandButtonScreenTipTitle, Mode=OneWay}"
                      x:Shared="False"
                      Text="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandButtonScreenTipText, Mode=OneWay}" />

    <Fluent:ScreenTip x:Key="Fluent.Ribbon.Resources.RibbonTabControl.SwitchScreenTip"
                      Title="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.SwitchButtonScreenTipTitle, Mode=OneWay}"
                      x:Shared="False"
                      Text="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.SwitchButtonScreenTipText, Mode=OneWay}" />

    <ControlTemplate x:Key="RibbonTabControlControlTemplate"
                     TargetType="{x:Type Fluent:RibbonTabControl}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="CanContentScroll" Value="True" />
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="PanningMode" Value="HorizontalOnly" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid"
                                  Background="{TemplateBinding Background}"
                                  IsHitTestVisible="True">
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        Margin="{TemplateBinding Padding}"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        IsHitTestVisible="True" />
                                <RepeatButton Width="13"
                                              Height="Auto"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false"
                                              Style="{DynamicResource ScrollButtonStyle}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="0"
                                                      FallbackValue="Visibility.Collapsed">
                                            <Binding Path="ComputedHorizontalScrollBarVisibility"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="HorizontalOffset"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ExtentWidth"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ViewportWidth"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Width="3"
                                          Height="5"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M0,0L1,1 1,-1z"
                                          Fill="{DynamicResource BlackBrush}"
                                          Stretch="Fill"
                                          Stroke="{x:Null}"
                                          StrokeThickness="0" />
                                </RepeatButton>
                                <RepeatButton Width="13"
                                              Height="Auto"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Stretch"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false"
                                              Style="{DynamicResource ScrollButtonStyle}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="100"
                                                      FallbackValue="Visibility.Collapsed">
                                            <Binding Path="ComputedHorizontalScrollBarVisibility"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="HorizontalOffset"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ExtentWidth"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ViewportWidth"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Width="3"
                                          Height="5"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M1,0L0,1 0,-1z"
                                          Fill="{DynamicResource BlackBrush}"
                                          Stretch="Fill"
                                          Stroke="{x:Null}"
                                          StrokeThickness="0" />
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
            </Style>
        </ControlTemplate.Resources>

        <Grid x:Name="ContentGrid"
              Height="Auto"
              VerticalAlignment="Top"
              Background="{TemplateBinding Background}"
              KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="rowDefinition"
                               MinHeight="{TemplateBinding ContentHeight}"
                               MaxHeight="{TemplateBinding ContentHeight}" />
                <RowDefinition x:Name="rowDefinition1"
                               MinHeight="{TemplateBinding ContentGapHeight}"
                               MaxHeight="{TemplateBinding ContentGapHeight}" />
            </Grid.RowDefinitions>
            <Border x:Name="border"
                    Grid.Row="1"
                    Width="Auto"
                    Margin="0 -1 0 0"
                    HorizontalAlignment="Stretch"
                    BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    BorderThickness="0 1" />

            <Border Grid.Row="1"
                    Grid.RowSpan="1"
                    HorizontalAlignment="Stretch"
                    Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.BorderBrush}"
                    BorderThickness="{DynamicResource Fluent.Ribbon.Values.RibbonTabControl.Content.BorderThickness}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
                <ContentControl x:Name="mainContentControl"
                                Margin="0"
                                Focusable="False">
                    <ContentPresenter x:Name="PART_SelectedContentPresenter"
                                      Margin="0"
                                      HorizontalAlignment="Stretch"
                                      ContentSource="SelectedContent" />
                </ContentControl>
            </Border>

            <Border Grid.Row="2"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    Background="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />

            <Grid x:Name="TabsGrid"
                  Grid.Row="0"
                  Width="Auto"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.TabsGrid.Background}"
                  KeyboardNavigation.TabIndex="1"
                  TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.TabsGrid.Foreground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />

                <!-- Margin on bottom is need to keep the border surrounding the content area visible below the menu presenter -->
                <ContentPresenter Grid.Column="0"
                                  Margin="0 0 0 1"
                                  VerticalAlignment="Stretch"
                                  ContentSource="Menu" />

                <Fluent:RibbonScrollViewer Grid.Column="1"
                                           Width="Auto"
                                           Margin="0"
                                           HorizontalAlignment="Left"
                                           HorizontalScrollBarVisibility="Auto"
                                           IsHitTestVisible="True"
                                           IsTabStop="False"
                                           Style="{DynamicResource RibbonTabScrollViewer}"
                                           VerticalScrollBarVisibility="Disabled"
                                           Visibility="{Binding AreTabHeadersVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Fluent:RibbonTabsContainer x:Name="PART_TabsContainer"
                                                Height="Auto"
                                                Margin="0"
                                                HorizontalAlignment="Stretch"
                                                IsItemsHost="True"
                                                KeyboardNavigation.TabIndex="1" />
                </Fluent:RibbonScrollViewer>

                <StackPanel Grid.Column="3"
                            Margin="0 0 0 1"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <StackPanel x:Name="PART_ToolbarPanel"
                                Orientation="Horizontal"
                                Visibility="{Binding IsToolBarVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />

                    <Fluent:ToggleButton x:Name="PART_MinimizeButton"
                                         Width="22"
                                         Height="22"
                                         Margin="0"
                                         IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Size="Small"
                                         Style="{DynamicResource Fluent.Ribbon.Styles.RibbonTabControl.MinimizeToggleButton}"
                                         Visibility="{TemplateBinding CanMinimize, Converter={StaticResource boolToVisibilityConverter}}" />

                    <Fluent:ToggleButton x:Name="PART_SwitchButton"
                                         Width="22"
                                         Height="22"
                                         Margin="0"
                                         IsChecked="{Binding Path=IsSimplified, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Size="Small"
                                         Style="{DynamicResource Fluent.Ribbon.Styles.RibbonTabControl.MinimizeToggleButton}"
                                         Visibility="{TemplateBinding CanUseSimplified, Converter={StaticResource boolToVisibilityConverter}}" />
                </StackPanel>
            </Grid>

            <!-- Placement target must be the selected item. Otherwise things like DPI and monitor are selected wrong if the tabcontrol 0,0 is on a different screen than the selected tabs 0,0 -->
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Custom"
                   PlacementTarget="{Binding Path=SelectedTabItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{x:Static Fluent:RibbonTabControl.AdditionalPopupSpaceForKeyTipsGridLength}" />
                        <!-- Needed for overlapping Keytips -->
                        <RowDefinition MinHeight="{TemplateBinding ContentHeight}"
                                       MaxHeight="{TemplateBinding ContentHeight}" />
                        <RowDefinition Height="{x:Static Fluent:RibbonTabControl.AdditionalPopupSpaceForKeyTipsGridLength}" />
                        <!-- Needed for overlapping Keytips -->
                    </Grid.RowDefinitions>
                    <Border Grid.Row="1"
                            Margin="1 0"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
                            BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="0 0 0 1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabNavigation="Local"
                            TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
                        <ContentControl x:Name="popupContentControl"
                                        Margin="0"
                                        Focusable="False" />
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMinimized" Value="False">
                <Setter TargetName="PART_MinimizeButton" Property="Icon" Value="{DynamicResource Fluent.Ribbon.Images.RibbonCollapse}" />
                <Setter TargetName="PART_MinimizeButton" Property="ToolTip" Value="{DynamicResource Fluent.Ribbon.Resources.RibbonTabControl.MinimizeScreenTip}" />
            </Trigger>
            <Trigger Property="IsMinimized" Value="True">
                <!-- Switch content to popup END -->
                <Setter TargetName="PART_MinimizeButton" Property="Icon" Value="{DynamicResource Fluent.Ribbon.Images.RibbonExpand}" />
                <Setter TargetName="PART_MinimizeButton" Property="ToolTip" Value="{DynamicResource Fluent.Ribbon.Resources.RibbonTabControl.ExpandScreenTip}" />
                <!-- Switch content to popup -->
                <Setter TargetName="mainContentControl" Property="Content" Value="{x:Null}" />
                <Setter TargetName="popupContentControl" Property="Content" Value="{Binding ElementName=PART_SelectedContentPresenter, Mode=OneWay}" />
                <Setter TargetName="rowDefinition" Property="MinHeight" Value="0" />
                <Setter TargetName="rowDefinition1" Property="MinHeight" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDropDownOpen" Value="True" />
                    <Condition Property="IsMinimized" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="Icon" Value="{DynamicResource Fluent.Ribbon.Images.RibbonPin}" />
            </MultiTrigger>
            <Trigger Property="CanUseSimplified" Value="True">
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="False">
                <Setter TargetName="PART_SwitchButton" Property="Icon" Value="{DynamicResource Fluent.Ribbon.Images.RibbonCollapse}" />
                <Setter TargetName="PART_SwitchButton" Property="ToolTip" Value="{DynamicResource Fluent.Ribbon.Resources.RibbonTabControl.SwitchScreenTip}" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter TargetName="PART_SwitchButton" Property="Icon" Value="{DynamicResource Fluent.Ribbon.Images.RibbonExpand}" />
                <Setter TargetName="PART_SwitchButton" Property="ToolTip" Value="{DynamicResource Fluent.Ribbon.Resources.RibbonTabControl.SwitchScreenTip}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>